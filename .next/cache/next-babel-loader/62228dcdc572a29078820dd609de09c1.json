{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport _fetch from \"isomorphic-unfetch\";\nimport \"../styles/reset.scss\";\nimport \"../styles/global.scss\";\nimport style from \"../styles/layout.scss\";\nimport Loading from \"../components/loading\";\nimport Head from \"../components/head\";\nimport CityPicker from \"../components/city-picker\";\nimport BoxList from \"../components/box-list\";\nimport Schedule from \"../components/schedule\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.handleBoxIdChange = _this.handleBoxIdChange.bind(_assertThisInitialized(_this));\n    _this.handleCurrentCityChange = _this.handleCurrentCityChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"handleBoxIdChange\",\n    value: function handleBoxIdChange(boxId) {\n      this.setState({\n        boxId: boxId\n      });\n      localStorage.setItem(\"sm/boxId\", boxId);\n    }\n  }, {\n    key: \"handleCurrentCityChange\",\n    value: function handleCurrentCityChange(currentCity) {\n      this.fetch(currentCity);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentCity = localStorage.getItem(\"sm/currentCity\") || \"北京市\";\n      this.fetch(currentCity);\n    }\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(currentCity) {\n        var result, json, boxId, cityMap, boxList;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return _fetch(\"/static/\".concat(currentCity, \".json\"));\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return result.json();\n\n              case 6:\n                json = _context.sent;\n                boxId = localStorage.getItem(\"sm/boxId\") * 1;\n                cityMap = json.data.main.boxArea.cityMap;\n                boxList = cityMap[currentCity][0].boxList;\n\n                if (boxList.every(function (item) {\n                  return item.boxId !== boxId;\n                })) {\n                  boxId = boxList[0].boxId;\n                }\n\n                this.setState({\n                  loading: false,\n                  data: json.data,\n                  boxId: boxId,\n                  currentCity: currentCity\n                });\n                localStorage.setItem(\"sm/boxId\", boxId);\n                localStorage.setItem(\"sm/currentCity\", currentCity);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetch(_x) {\n        return _fetch2.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      if (loading) return __jsx(Loading, null);\n      var _this$state = this.state,\n          data = _this$state.data,\n          boxId = _this$state.boxId,\n          currentCity = _this$state.currentCity;\n      var cityList = data.main.boxArea.cityList;\n      return __jsx(\"div\", {\n        className: style.main\n      }, __jsx(Head, {\n        title: \"\\u8D85\\u7EA7\\u7329\\u7329\\xB7\\u8BFE\\u7A0B\\u8868\",\n        description: \"\\u8D85\\u7EA7\\u7329\\u7329\\u5065\\u8EAB\\u5728\\u7EBF\\u8BFE\\u7A0B\\u8868\",\n        url: \"https://super.kshift.me\"\n      }), __jsx(\"nav\", null, __jsx(CityPicker, {\n        cityList: cityList,\n        currentCity: currentCity,\n        onCurrentCityChange: this.handleCurrentCityChange\n      }), __jsx(BoxList, {\n        data: data,\n        boxId: boxId,\n        currentCity: currentCity,\n        onBoxIdChange: this.handleBoxIdChange\n      })), __jsx(Schedule, {\n        data: data,\n        boxId: boxId\n      }));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}
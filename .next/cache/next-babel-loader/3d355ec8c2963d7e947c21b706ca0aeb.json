{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruochen/Documents/workspace/supermonkey/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport _fetch from \"isomorphic-unfetch\";\nimport \"../styles/reset.scss\";\nimport \"../styles/global.scss\";\nimport style from \"../styles/layout.scss\";\nimport Loading from \"../components/loading\";\nimport Head from \"../components/head\";\nimport CityPicker from \"../components/city-picker\";\nimport BoxList from \"../components/box-list\";\nimport Schedule from \"../components/schedule\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.handleBoxIdChange = _this.handleBoxIdChange.bind(_assertThisInitialized(_this));\n    _this.handleCurrentCityChange = _this.handleCurrentCityChange.bind(_assertThisInitialized(_this));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"handleBoxIdChange\",\n    value: function handleBoxIdChange(boxId) {\n      this.setState({\n        boxId: boxId\n      });\n      localStorage.setItem(\"sm/boxId\", boxId);\n    }\n  }, {\n    key: \"handleCurrentCityChange\",\n    value: function handleCurrentCityChange(currentCity) {// this.setState({ currentCity });\n      // localStorage.setItem(\"sm/currentCity\", currentCity);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentCity = localStorage.getItem(\"sm/currentCity\") || \"北京市\";\n      this.fetch(currentCity);\n    }\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(currentCity) {\n        var result, json, boxId, cityMap, boxList;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return _fetch(\"/static/\".concat(currentCity, \".json\"));\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return result.json();\n\n              case 6:\n                json = _context.sent;\n                console.log(json.data);\n                boxId = localStorage.getItem(\"sm/boxId\") * 1;\n                cityMap = json.data.main.boxArea.cityMap;\n                boxList = cityMap[currentCity][0].boxList;\n\n                if (boxList.every(function (item) {\n                  return item.boxId !== boxId;\n                })) {\n                  boxId = boxList[0].boxId;\n                }\n\n                this.setState({\n                  loading: false,\n                  data: json.data,\n                  boxId: boxId,\n                  currentCity: currentCity\n                });\n                localStorage.setItem(\"sm/boxId\", boxId);\n                localStorage.setItem(\"sm/currentCity\", currentCity);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetch(_x) {\n        return _fetch2.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n      if (loading) return __jsx(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n      var _this$state = this.state,\n          data = _this$state.data,\n          boxId = _this$state.boxId,\n          currentCity = _this$state.currentCity;\n      var cityList = data.main.boxArea.cityList;\n      return __jsx(\"div\", {\n        className: style.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(Head, {\n        title: \"\\u8D85\\u7EA7\\u7329\\u7329\\xB7\\u8BFE\\u7A0B\\u8868\",\n        description: \"\\u8D85\\u7EA7\\u7329\\u7329\\u5065\\u8EAB\\u5728\\u7EBF\\u8BFE\\u7A0B\\u8868\",\n        url: \"https://super.kshift.me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), __jsx(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(CityPicker, {\n        cityList: cityList,\n        currentCity: currentCity,\n        onCurrentCityChange: this.handleCurrentCityChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), __jsx(BoxList, {\n        data: data,\n        boxId: boxId,\n        currentCity: currentCity,\n        onBoxIdChange: this.handleBoxIdChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), __jsx(Schedule, {\n        data: data,\n        boxId: boxId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/ruochen/Documents/workspace/supermonkey/pages/index.js"],"names":["React","fetch","style","Loading","Head","CityPicker","BoxList","Schedule","Index","props","handleBoxIdChange","bind","handleCurrentCityChange","state","loading","boxId","setState","localStorage","setItem","currentCity","getItem","result","json","console","log","data","cityMap","main","boxArea","boxList","every","item","cityList","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../styles/reset.scss\";\nimport \"../styles/global.scss\";\nimport style from \"../styles/layout.scss\";\n\nimport Loading from \"../components/loading\";\nimport Head from \"../components/head\";\nimport CityPicker from \"../components/city-picker\";\nimport BoxList from \"../components/box-list\";\nimport Schedule from \"../components/schedule\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleBoxIdChange = this.handleBoxIdChange.bind(this);\n    this.handleCurrentCityChange = this.handleCurrentCityChange.bind(this);\n    this.state = { loading: true };\n  }\n\n  handleBoxIdChange(boxId) {\n    this.setState({ boxId });\n    localStorage.setItem(\"sm/boxId\", boxId);\n  }\n\n  handleCurrentCityChange(currentCity) {\n    // this.setState({ currentCity });\n    // localStorage.setItem(\"sm/currentCity\", currentCity);\n  }\n\n  componentDidMount() {\n    const currentCity = localStorage.getItem(\"sm/currentCity\") || \"北京市\";\n    this.fetch(currentCity);\n  }\n\n  async fetch(currentCity) {\n    this.setState({ loading: true });\n    const result = await fetch(`/static/${currentCity}.json`);\n    const json = await result.json();\n    console.log(json.data);\n\n    let boxId = localStorage.getItem(\"sm/boxId\") * 1;\n    const { cityMap } = json.data.main.boxArea;\n    const { boxList } = cityMap[currentCity][0];\n\n    if (boxList.every(item => item.boxId !== boxId)) {\n      boxId = boxList[0].boxId;\n    }\n\n    this.setState({\n      loading: false,\n      data: json.data,\n      boxId,\n      currentCity,\n    });\n    localStorage.setItem(\"sm/boxId\", boxId);\n    localStorage.setItem(\"sm/currentCity\", currentCity);\n  }\n\n  render() {\n    const { loading } = this.state;\n    if (loading) return <Loading />;\n\n    const { data, boxId, currentCity } = this.state;\n    const { cityList } = data.main.boxArea;\n\n    return (\n      <div className={style.main}>\n        <Head\n          title=\"超级猩猩·课程表\"\n          description=\"超级猩猩健身在线课程表\"\n          url=\"https://super.kshift.me\"\n        />\n        <nav>\n          <CityPicker\n            cityList={cityList}\n            currentCity={currentCity}\n            onCurrentCityChange={this.handleCurrentCityChange}\n          />\n          <BoxList\n            data={data}\n            boxId={boxId}\n            currentCity={currentCity}\n            onBoxIdChange={this.handleBoxIdChange}\n          />\n        </nav>\n        <Schedule data={data} boxId={boxId} />\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
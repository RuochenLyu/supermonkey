{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruochen/Documents/workspace/supermonkey/components/city-picker.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../styles/city-picker.scss\";\n\nvar CityPicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CityPicker, _React$Component);\n\n  function CityPicker(props) {\n    var _this;\n\n    _classCallCheck(this, CityPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CityPicker).call(this, props));\n    _this.state = {\n      opend: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CityPicker, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      this.props.onCurrentCityChange(e.target.dataset.id);\n      this.setState({\n        opend: false\n      });\n    }\n  }, {\n    key: \"toggleList\",\n    value: function toggleList() {\n      this.setState(function (prevState) {\n        return {\n          opend: !prevState.opend\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          cityList = _this$props.cityList,\n          currentCity = _this$props.currentCity;\n      var cityItems = cityList.map(function (item) {\n        return __jsx(\"div\", {\n          key: item,\n          className: style.city,\n          onClick: _this2.handleClick,\n          \"data-id\": item,\n          \"data-current\": currentCity === item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, item);\n      });\n      return __jsx(\"div\", {\n        className: style.picker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: style.current,\n        onClick: function onClick() {\n          return _this2.toggleList();\n        },\n        \"data-opend\": this.state.opend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: \"/static/touch-icon.png\",\n        alt: \"\\u8D85\\u7EA7\\u7329\\u7329\\xB7\\u8BFE\\u7A0B\\u8868\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, currentCity), __jsx(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"polyline\", {\n        points: \"6 9 12 15 18 9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: style.dropdown,\n        \"data-opend\": this.state.opend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, cityItems));\n    }\n  }]);\n\n  return CityPicker;\n}(React.Component);\n\nCityPicker.propTypes = {\n  cityList: PropTypes.array,\n  currentCity: PropTypes.string\n};\nexport default CityPicker;","map":{"version":3,"sources":["/Users/ruochen/Documents/workspace/supermonkey/components/city-picker.js"],"names":["React","PropTypes","style","CityPicker","props","state","opend","handleClick","bind","e","onCurrentCityChange","target","dataset","id","setState","prevState","cityList","currentCity","cityItems","map","item","city","picker","current","toggleList","dropdown","Component","propTypes","array","string"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAHiB;AAIlB;;;;gCAEWC,C,EAAG;AACb,WAAKL,KAAL,CAAWM,mBAAX,CAA+BD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,EAAhD;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;;iCAEY;AACX,WAAKQ,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BT,UAAAA,KAAK,EAAE,CAACS,SAAS,CAACT;AADQ,SAAL;AAAA,OAAvB;AAGD;;;6BAEQ;AAAA;;AAAA,wBAC2B,KAAKF,KADhC;AAAA,UACCY,QADD,eACCA,QADD;AAAA,UACWC,WADX,eACWA,WADX;AAGP,UAAMC,SAAS,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAAC,IAAI,EAAI;AACrC,eACE;AACE,UAAA,GAAG,EAAEA,IADP;AAEE,UAAA,SAAS,EAAElB,KAAK,CAACmB,IAFnB;AAGE,UAAA,OAAO,EAAE,MAAI,CAACd,WAHhB;AAIE,qBAASa,IAJX;AAKE,0BAAcH,WAAW,KAAKG,IALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOGA,IAPH,CADF;AAWD,OAZiB,CAAlB;AAcA,aACE;AAAK,QAAA,SAAS,EAAElB,KAAK,CAACoB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAEpB,KAAK,CAACqB,OADnB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,UAAL,EAAN;AAAA,SAFX;AAGE,sBAAY,KAAKnB,KAAL,CAAWC,KAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAK,QAAA,GAAG,EAAC,wBAAT;AAAkC,QAAA,GAAG,EAAC,gDAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOW,WAAP,CANF,EAOE;AACE,QAAA,KAAK,EAAC,4BADR;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,MAAM,EAAC,cAJT;AAKE,QAAA,WAAW,EAAC,GALd;AAME,QAAA,aAAa,EAAC,OANhB;AAOE,QAAA,cAAc,EAAC,OAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAU,QAAA,MAAM,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAPF,CADF,EAoBE;AAAK,QAAA,SAAS,EAAEf,KAAK,CAACuB,QAAtB;AAAgC,sBAAY,KAAKpB,KAAL,CAAWC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,SADH,CApBF,CADF;AA0BD;;;;EA7DsBlB,KAAK,CAAC0B,S;;AAgE/BvB,UAAU,CAACwB,SAAX,GAAuB;AACrBX,EAAAA,QAAQ,EAAEf,SAAS,CAAC2B,KADC;AAErBX,EAAAA,WAAW,EAAEhB,SAAS,CAAC4B;AAFF,CAAvB;AAKA,eAAe1B,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport style from \"../styles/city-picker.scss\";\n\nclass CityPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { opend: false };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.onCurrentCityChange(e.target.dataset.id);\n    this.setState({ opend: false });\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      opend: !prevState.opend,\n    }));\n  }\n\n  render() {\n    const { cityList, currentCity } = this.props;\n\n    const cityItems = cityList.map(item => {\n      return (\n        <div\n          key={item}\n          className={style.city}\n          onClick={this.handleClick}\n          data-id={item}\n          data-current={currentCity === item}\n        >\n          {item}\n        </div>\n      );\n    });\n\n    return (\n      <div className={style.picker}>\n        <div\n          className={style.current}\n          onClick={() => this.toggleList()}\n          data-opend={this.state.opend}\n        >\n          <img src=\"/static/touch-icon.png\" alt=\"超级猩猩·课程表\" />\n          <span>{currentCity}</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <polyline points=\"6 9 12 15 18 9\"></polyline>\n          </svg>\n        </div>\n        <div className={style.dropdown} data-opend={this.state.opend}>\n          {cityItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nCityPicker.propTypes = {\n  cityList: PropTypes.array,\n  currentCity: PropTypes.string,\n};\n\nexport default CityPicker;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"file":"static/webpack/static/development/pages/index.js.3de8638c1db1e8296cf4.hot-update.js","sources":["webpack:///./components/box-list.js","webpack:///./components/city-picker.js","webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../styles/box-list.scss\";\n\nclass BoxList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.onBoxIdChange(e.target.dataset.id * 1);\n  }\n\n  render() {\n    const { data, boxId, currentCity } = this.props;\n    const { cityMap } = data.main.boxArea;\n    const { boxList } = cityMap[currentCity][0];\n\n    const boxItems = boxList.map(item => {\n      return (\n        <div\n          key={item.boxId}\n          className={style.box}\n          onClick={this.handleClick}\n          data-id={item.boxId}\n          data-current={boxId === item.boxId}\n        >\n          {item.boxname}\n        </div>\n      );\n    });\n\n    return <div className={style.list}>{boxItems}</div>;\n  }\n}\n\nBoxList.propTypes = {\n  data: PropTypes.object,\n  boxId: PropTypes.number,\n  currentCity: PropTypes.string,\n};\n\nexport default BoxList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport style from \"../styles/city-picker.scss\";\n\nclass CityPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { opend: false };\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      opend: !prevState.opend,\n    }));\n  }\n\n  render() {\n    const { cityList, currentCity } = this.props;\n\n    const cityItems = cityList.map(item => {\n      return (\n        <div\n          key={item}\n          className={style.city}\n          data-current={currentCity === item}\n        >\n          {item}\n        </div>\n      );\n    });\n\n    return (\n      <div className={style.picker}>\n        <div\n          className={style.current}\n          onClick={() => this.toggleList()}\n          data-opend={this.state.opend}\n        >\n          <img src=\"/static/touch-icon.png\" alt=\"超级猩猩·课程表\" />\n          <span>{currentCity}</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <polyline points=\"6 9 12 15 18 9\"></polyline>\n          </svg>\n        </div>\n        <div className={style.dropdown} data-opend={this.state.opend}>\n          {cityItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nCityPicker.propTypes = {\n  cityList: PropTypes.array,\n  currentCity: PropTypes.string,\n};\n\nexport default CityPicker;\n","import React from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../styles/reset.scss\";\nimport \"../styles/global.scss\";\nimport style from \"../styles/layout.scss\";\n\nimport Loading from \"../components/loading\";\nimport Head from \"../components/head\";\nimport CityPicker from \"../components/city-picker\";\nimport BoxList from \"../components/box-list\";\nimport Schedule from \"../components/schedule\";\nimport Data from \"../data\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleBoxIdChange = this.handleBoxIdChange.bind(this);\n    this.handleCurrentCityChange = this.handleCurrentCityChange.bind(this);\n    this.state = { loading: true };\n  }\n\n  handleBoxIdChange(boxId) {\n    this.setState({ boxId });\n    localStorage.setItem(\"supermonkey/boxId\", boxId);\n  }\n\n  handleCurrentCityChange(currentCity) {\n    this.setState({ currentCity });\n    localStorage.setItem(\"supermonkey/currentCity\", currentCity);\n  }\n\n  componentDidMount() {\n    let boxId = localStorage.getItem(\"supermonkey/boxId\");\n    const currentCity =\n      localStorage.getItem(\"supermonkey/currentCity\") || \"北京市\";\n    const { cityMap } = Data.data.main.boxArea;\n    const { boxList } = cityMap[currentCity][0];\n\n    if (boxList.every(item => item.boxId !== boxId)) {\n      boxId = boxList[0].boxId;\n    }\n\n    this.setState({\n      loading: false,\n      data: Data.data,\n      boxId,\n      currentCity,\n    });\n    localStorage.setItem(\"supermonkey/boxId\", boxId);\n    localStorage.setItem(\"supermonkey/currentCity\", currentCity);\n  }\n\n  async fetch(city) {\n    this.setState({ loading: true });\n    const result = await fetch(\n      `https://busi.supermonkey.com.cn/wxClass/getClassSelectList3?city=${encodeURI(\n        city\n      )}`\n    );\n    const json = await result.json();\n    console.log(json.data);\n    // return { data: json.data }\n  }\n\n  render() {\n    const { loading } = this.state;\n    if (loading) return <Loading />;\n\n    const { data, boxId, currentCity } = this.state;\n    const { cityList } = data.main.boxArea;\n\n    return (\n      <div className={style.main}>\n        <Head\n          title=\"超级猩猩·课程表\"\n          description=\"超级猩猩健身在线课程表\"\n          url=\"https://super.kshift.me\"\n        />\n        <nav>\n          <CityPicker cityList={cityList} currentCity={currentCity} />\n          <BoxList\n            data={data}\n            boxId={boxId}\n            currentCity={currentCity}\n            onBoxIdChange={this.handleBoxIdChange}\n            onCurrentCityChange={this.handleCurrentCityChange}\n          />\n        </nav>\n        <Schedule data={data} boxId={boxId} />\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AA9BA;AACA;AAgCA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AAAA;AACA;AADA;AAAA;AAGA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AArDA;AACA;AAuDA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAKA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAFA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;AAEA;;;;;;AACA;AAAA;AAAA;;AACA;AACA;;AADA;;AAKA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA9EA;AACA;AAgFA;;;;A","sourceRoot":""}
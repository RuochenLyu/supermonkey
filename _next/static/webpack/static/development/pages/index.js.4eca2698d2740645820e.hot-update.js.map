{"version":3,"file":"static/webpack/static/development/pages/index.js.4eca2698d2740645820e.hot-update.js","sources":["webpack:///./components/schedule.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport format from \"../utils/format\";\nimport isToday from \"../utils/isToday\";\n\nimport Course from \"./course\";\nimport Popup from \"../components/popup\";\nimport style from \"../styles/schedule.scss\";\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCourseClick = this.handleCourseClick.bind(this);\n    this.state = { classId: null };\n  }\n\n  handleCourseClick(classId) {\n    this.setState({ classId });\n    console.log(classId);\n  }\n\n  render() {\n    const { data, boxId } = this.props;\n    const { scheduleList } = data.main;\n\n    const listItems = scheduleList.map(item => {\n      const list = item.boxClassSchedulesList.find(x => x.boxId === boxId);\n      let courses = list.classScheduleList.map(id => {\n        return (\n          <Course\n            key={id}\n            data={data}\n            course={data.scheduleSmallMap[id]}\n            onCourseClick={this.handleCourseClick}\n          />\n        );\n      });\n\n      if (list.classScheduleListEmptyReason) {\n        courses = (\n          <div className={style.init}>\n            猩猩排课中\n            <br />\n            每周五 22:30 发布\n          </div>\n        );\n      }\n\n      const today = isToday(item.date) ? (\n        <span className={style.today}>今天</span>\n      ) : (\n        <span className={style.desc}>{format(item.date, \"E\")}</span>\n      );\n\n      return (\n        <div key={item.date} className={style.list}>\n          <div className={style.header}>\n            <h2>{format(item.date)}</h2>\n            {today}\n          </div>\n          <div>{courses}</div>\n        </div>\n      );\n    });\n\n    return (\n      <main className={style.main}>\n        <header className={style[\"main-header\"]} />\n        {listItems}\n        <Popup classId={this.state.classId} />\n      </main>\n    );\n  }\n}\n\nSchedule.propTypes = {\n  data: PropTypes.object,\n  boxId: PropTypes.number,\n};\n\nexport default Schedule;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AAIA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA/DA;AACA;AAiEA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}
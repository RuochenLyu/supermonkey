{"version":3,"file":"static/webpack/static/development/pages/index.js.7d696ce9b383da020f7f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport AV from \"leancloud-storage\";\n\nimport \"../styles/reset.scss\";\nimport \"../styles/global.scss\";\nimport style from \"../styles/layout.scss\";\n\nimport Loading from \"../components/loading\";\nimport Head from \"../components/head\";\nimport CityPicker from \"../components/city-picker\";\nimport BoxList from \"../components/box-list\";\nimport Schedule from \"../components/schedule\";\nimport Mobile from \"../components/mobile\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleBoxIdChange = this.handleBoxIdChange.bind(this);\n    this.handleCurrentCityChange = this.handleCurrentCityChange.bind(this);\n    this.state = { loading: true };\n  }\n\n  handleBoxIdChange(boxId) {\n    this.setState({ boxId });\n    localStorage.setItem(\"boxId\", boxId);\n  }\n\n  handleCurrentCityChange(currentCity) {\n    this.fetch(currentCity);\n  }\n\n  componentDidMount() {\n    ReactGA.initialize(\"UA-150431358-1\");\n    ReactGA.pageview(location.pathname);\n    AV.init({\n      appId: \"omStNgknnXtGwJ5mV6wyIthz-gzGzoHsz\",\n      appKey: \"x6pStM61pw2sjQfUWDJF7Yz6\",\n      serverURLs: \"https://api-super.owcat.com\"\n    });\n\n    const currentCity = localStorage.getItem(\"currentCity\") || \"北京市\";\n    this.fetch(currentCity);\n  }\n\n  async fetch(currentCity) {\n    this.setState({ loading: true });\n    new AV.Query(\"Course\")\n      .equalTo(\"city\", currentCity)\n      .find()\n      .then(data => {\n        if (data.length === 0) return;\n        data = data[0].attributes.data;\n        console.log(data);\n\n        let boxId = localStorage.getItem(\"boxId\") * 1;\n        const { cityMap } = data.main.boxArea;\n        const { boxList } = cityMap[currentCity][0];\n\n        if (boxList.every(item => item.boxId !== boxId)) {\n          boxId = boxList[0].boxId;\n        }\n\n        this.setState({\n          loading: false,\n          data,\n          boxId,\n          currentCity\n        });\n        console.log(currentCity);\n        localStorage.setItem(\"boxId\", boxId);\n        localStorage.setItem(\"currentCity\", currentCity);\n      });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div>\n          <Head />\n          <div className={style.main}>\n            <Loading />\n          </div>\n          <Mobile />\n        </div>\n      );\n    }\n\n    const { data, boxId, currentCity } = this.state;\n    const { cityList } = data.main.boxArea;\n\n    return (\n      <div>\n        <Head />\n        <Mobile />\n        <div className={style.main}>\n          <CityPicker\n            cityList={cityList}\n            currentCity={currentCity}\n            onCurrentCityChange={this.handleCurrentCityChange}\n          />\n          <BoxList\n            data={data}\n            boxId={boxId}\n            currentCity={currentCity}\n            onBoxIdChange={this.handleBoxIdChange}\n          />\n          <Schedule data={data} boxId={boxId} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAKA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AALA;AAAA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAhGA;AACA;AAkGA;;;;A","sourceRoot":""}